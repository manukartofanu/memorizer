<Window x:Class="Manurizer.Views.WordWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:Manurizer.Views"
		xmlns:conv="clr-namespace:Manurizer.Converters"
		xmlns:viewModels="clr-namespace:Manurizer.ViewModels"
        mc:Ignorable="d"
        Title="Manurizer" SizeToContent="WidthAndHeight" WindowStartupLocation="CenterOwner">
	<Window.DataContext>
		<viewModels:WordViewModel/>
	</Window.DataContext>
	<Window.Resources>
		<Style x:Key="HeaderStyle" TargetType="TextBlock">
			<Setter Property="Foreground" Value="{StaticResource MidnightBrush}"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="FontSize" Value="20"/>
		</Style>
		<Style x:Key="LabelStyle" TargetType="TextBlock">
			<Setter Property="Foreground" Value="{StaticResource Dark500Brush}"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="FontSize" Value="10"/>
			<Setter Property="Margin" Value="0"/>
		</Style>
		<Style x:Key="RoundTextBoxStyle" TargetType="TextBox">
			<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FontSize" Value="11"/>
			<Setter Property="Height" Value="28"/>
			<Setter Property="Padding" Value="4 2 4 2"/>
			<Setter Property="Margin" Value="0 8 0 0"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Foreground" Value="{StaticResource MidnightBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Dark500Brush}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MidnightBrush}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="LinkButtonTemplate" TargetType="{x:Type Button}">
			<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
				<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsDefaulted" Value="True">
					<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style TargetType="Button" x:Key="LinkButtonStyle" BasedOn="{StaticResource ButtonBaseStyle}">
			<Setter Property="Foreground" Value="{StaticResource MidnightBrush}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Height" Value="24"/>
			<Setter Property="Width" Value="132"/>
			<Setter Property="Cursor" Value="Arrow"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="#F2F3F5"/>
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" Value="#F2F3F5"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<conv:TabToIndexConveter x:Key="TabToIndexConverter"/>
	</Window.Resources>
	<DockPanel Width="384" Height="608" Margin="24">
		<DockPanel DockPanel.Dock="Bottom" Margin="0 10 0 0">
			<Button DockPanel.Dock="Left" Style="{StaticResource SecondaryActionButtonStyle}"
					Template="{StaticResource ActionButtonTemplate}" Click="ButtonCancel_Click">Cancel</Button>
			<Button DockPanel.Dock="Right" Command="{Binding Path=SaveWordCommand}"
					Template="{StaticResource ActionButtonTemplate}">
				<Button.Style>
					<Style TargetType="Button" BasedOn="{StaticResource PrimaryActionButtonStyle}">
						<Setter Property="Content" Value="Add word"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding Path=IsEdit}" Value="True">
								<Setter Property="Content" Value="Save word"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
			</Button>
		</DockPanel>
		<StackPanel>
			<TextBlock Style="{StaticResource HeaderStyle}">Spelling</TextBlock>
			<StackPanel Margin="0 12 0 0">
				<TextBlock Text="Word" Style="{StaticResource LabelStyle}"/>
				<TextBox Text="{Binding Path=Name}" Style="{StaticResource RoundTextBoxStyle}"/>
				<Grid Margin="0 12 0 0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<StackPanel Margin="0 0 8 0">
						<TextBlock Text="Word class" Style="{StaticResource LabelStyle}"/>
						<TextBox Text="{Binding Path=Class}" Style="{StaticResource RoundTextBoxStyle}"/>
					</StackPanel>
					<StackPanel Grid.Column="1" Margin="8 0 0 0">
						<TextBlock Text="Transcription" Style="{StaticResource LabelStyle}"/>
						<TextBox Text="{Binding Path=Transcription}" Style="{StaticResource RoundTextBoxStyle}"/>
					</StackPanel>
				</Grid>
			</StackPanel>
			<TextBlock Margin="0 24 0 0" Style="{StaticResource HeaderStyle}">Meaning</TextBlock>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<StackPanel Margin="0 12 8 0">
					<TextBlock Style="{StaticResource LabelStyle}">
						Guide word <Span FontWeight="Normal" FontStyle="Italic">(optional)</Span></TextBlock>
					<TextBox Text="{Binding Path=GuideWord}" Style="{StaticResource RoundTextBoxStyle}" CharacterCasing="Upper"/>
				</StackPanel>
				<TextBlock Grid.Column="1" Margin="8 0 0 0" TextWrapping="Wrap" Foreground="#747F8D"
						   FontSize="10" VerticalAlignment="Bottom">
				Helps you to find the right meaning when a word has more than one meaning</TextBlock>
			</Grid>
			<Grid Margin="0 12 0 0" Height="257">
				<TabControl VerticalAlignment="Top" Margin="0 0 0 0" Name="tabControlMeaning"
							Height="249" ItemsSource="{Binding Path=MeaningList}" BorderThickness="0 1 0 0">
					<TabControl.Resources>
						<ControlTemplate x:Key="TabItemControlTemplate" TargetType="{x:Type TabItem}">
							<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding Border.CornerRadius}" Height="{TemplateBinding Height}">
								<ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
							</Border>
						</ControlTemplate>
					</TabControl.Resources>
					<TabControl.ContentTemplate>
						<DataTemplate>
							<StackPanel>
								<TextBlock Margin="0 12 0 0" Text="Meaning" Style="{StaticResource LabelStyle}"/>
								<TextBox Text="{Binding Path=Text}" Style="{StaticResource RoundTextBoxStyle}"
									 Height="56" TextWrapping="Wrap" VerticalContentAlignment="Top" AcceptsReturn="True"/>
								<TextBlock Margin="0 12 0 0" Style="{StaticResource LabelStyle}">
								Example(s) <Span FontWeight="Normal" FontStyle="Italic">(optional)</Span></TextBlock>
								<TextBox Text="{Binding Path=Text}" Style="{StaticResource RoundTextBoxStyle}"
									 Height="96" TextWrapping="Wrap" VerticalContentAlignment="Top" AcceptsReturn="True"/>
								<Rectangle Margin="0 16 0 0" Height="2" Fill="Gray"/>
							</StackPanel>
						</DataTemplate>
					</TabControl.ContentTemplate>
					<TabControl.ItemContainerStyle>
						<Style TargetType="TabItem">
							<Setter Property="Header" Value="Meaning"/>
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="Width" Value="80"/>
							<Setter Property="Height" Value="21"/>
							<Setter Property="VerticalContentAlignment" Value="Center"/>
							<Setter Property="Template" Value="{StaticResource TabItemControlTemplate}"/>
							<Setter Property="HeaderTemplate">
								<Setter.Value>
									<DataTemplate>
										<TextBlock Text="{Binding Converter={StaticResource TabToIndexConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, StringFormat=Meaning {0}}"/>
									</DataTemplate>
								</Setter.Value>
							</Setter>
							<Style.Triggers>
								<Trigger Property="IsSelected" Value="True">
									<Setter Property="Margin" Value="0 0 0 -1"/>
									<Setter Property="BorderThickness" Value="0 0 0 2"/>
									<Setter Property="BorderBrush" Value="{StaticResource MidnightBrush}"/>
								</Trigger>
							</Style.Triggers>
						</Style>
					</TabControl.ItemContainerStyle>
				</TabControl>
			</Grid>
			<Grid Margin="0 4 0 0">
				<Button HorizontalAlignment="Left" Width="62" Height="24" Foreground="{StaticResource RedBrush}"
						Template="{StaticResource LinkButtonTemplate}"
						Command="{Binding Path=DeleteMeaningCommand}" CommandParameter="{Binding ElementName=tabControlMeaning, Path=SelectedItem}">
					<Button.Style>
						<Style TargetType="Button" BasedOn="{StaticResource LinkButtonStyle}">
							<Style.Triggers>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Visibility" Value="Collapsed"/>
								</Trigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
					Delete
				</Button>
				<Button HorizontalAlignment="Right" Height="24" Width="132"
						Style="{StaticResource LinkButtonStyle}" Template="{StaticResource LinkButtonTemplate}"
						Command="{Binding Path=AddMeaningCommand}">Add another meaning</Button>
			</Grid>
		</StackPanel>
	</DockPanel>
</Window>
