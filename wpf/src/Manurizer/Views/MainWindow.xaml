<Window x:Class="Manurizer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Manurizer.Views"
		xmlns:viewModels="clr-namespace:Manurizer.ViewModels"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="Manurizer" Width="1500" Height="800" Closing="Window_Closing" Closed="Window_Closed" Loaded="Window_Loaded" Name="window">
	<Window.DataContext>
		<viewModels:MainViewModel/>
	</Window.DataContext>
	<Window.Resources>
		<DataTemplate x:Key="denisItemTemplate">
			<TextBlock>
				<Run Text="{Binding Path=Name}"/>
				<Run> (</Run>
				<Run Text="{Binding Path=Category}" FontStyle="Italic"/>
				<Run>) </Run>
				<Run Text="{Binding Path=Meaning}"/>
			</TextBlock>
		</DataTemplate>
		<DataTemplate x:Key="iraItemTemplate">
			<StackPanel Orientation="Horizontal">
				<TextBlock TextWrapping="Wrap">
					<Run Text="{Binding Path=Name}"/>
					<Run> -</Run>
				</TextBlock>
				<TextBlock TextWrapping="Wrap" Width="360">
					<Run> </Run>
					<Run Text="{Binding Path=DefaultDefinition, Mode=OneWay}"/>
				</TextBlock>
			</StackPanel>
		</DataTemplate>
	</Window.Resources>
	<Grid>
		<Grid Width="292" HorizontalAlignment="Left">
			<ListView Padding="0 126 0 0" Width="292" Background="#F2F3F5" SelectedIndex="0">
				<ListView.Resources>
					<Style TargetType="ListViewItem">
						<Style.Setters>
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="BorderThickness" Value="0"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ListViewItem">
										<Border Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="4">
											<ContentPresenter VerticalAlignment="Center"/>
										</Border>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style.Setters>
						<Style.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#EBECEF"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Background" Value="#E4E6E9"/>
							</Trigger>
						</Style.Triggers>
					</Style>
				</ListView.Resources>
				<ListViewItem Width="260" Height="40">
					<TextBlock>Vocabulary list</TextBlock>
				</ListViewItem>
				<ListViewItem Width="260" Height="40">
					<TextBlock>Group management</TextBlock>
				</ListViewItem>
				<ListViewItem Width="260" Height="40">
					<TextBlock>Training</TextBlock>
				</ListViewItem>
				<ListViewItem Width="260" Height="40">
					<TextBlock>Settings</TextBlock>
				</ListViewItem>
			</ListView>
		</Grid>
		<StackPanel Width="512" Height="1000" Margin="8">
			<Button Margin="0 0 0 16" Command="{Binding Path=TrainCommand}" CommandParameter="{Binding ElementName=window}">Train</Button>
			<CheckBox Margin="0 0 0 16" IsChecked="{Binding Path=IsIra}">I am Ira</CheckBox>
			<ListBox Height="512" ItemsSource="{Binding Path=Words}" SelectedItem="{Binding Path=SelectedWord}">
				<ListBox.Style>
					<Style TargetType="ListBox">
						<Setter Property="ItemTemplate" Value="{DynamicResource denisItemTemplate}"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding Path=IsIra}" Value="True">
								<Setter Property="ItemTemplate" Value="{DynamicResource iraItemTemplate}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</ListBox.Style>
				<ListBox.ItemContainerStyle>
					<Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
						<EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
					</Style>
				</ListBox.ItemContainerStyle>
			</ListBox>
			<Button Margin="0 4 0 0" Command="{Binding Path=WordAddCommand}" CommandParameter="{Binding ElementName=window}">Add Word</Button>
			<Button Margin="0 4 0 0" Command="{Binding Path=WordViewCommand}" CommandParameter="{Binding ElementName=window}">View Word</Button>
			<Button Margin="0 16 0 0" Command="{Binding Path=WordCopyCommand}">Copy Word</Button>
			<Button Margin="0 32 0 0" Command="{Binding Path=WordDeleteCommand}">Delete Word</Button>
		</StackPanel>
	</Grid>
</Window>
